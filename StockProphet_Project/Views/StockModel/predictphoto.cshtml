@model DbModel
@{
	//http://localhost:5271/stockmodel/predictphoto?pid=49
	ViewData["Title"] = "股票預測";
	DateTime PfinishTime = (DateTime)Model.PfinishTime;
	DateTime PbulidTime = (DateTime)Model.PbulidTime;

	TimeSpan difference = DateTime.Now.Subtract(PfinishTime);
	TimeSpan differenceOpp = (PfinishTime).Subtract(DateTime.Now);
	var VarsTable = ViewBag.VarsTable;


	int finishdate = (int)PfinishTime.Subtract(PbulidTime).TotalDays;
	bool isTracing = ((int)difference.TotalDays <= 0) ? true : false;
	string finishdateCountDownStr = "";

	// 製作預測前時間區間 -------------
	// var ActualPrice = ChartData.Where(x => x.StDate.CompareTo(finishdates) <= 0).OrderByDescending(x => x.StDate).FirstOrDefault().SteClose;
	var finishdates = DateOnly.Parse(PfinishTime.ToString("yyyy-MM-dd"));
	var BuildDates = DateOnly.Parse(PbulidTime.ToString("yyyy-MM-dd"));

	var ChartData = new List<Stock>();
	ChartData = ViewBag.result.ChartData;
	ChartData = ChartData.Where(x => x.StDate.CompareTo(finishdates) <= 0).ToList();
	var LatestNdays_ori = ChartData.Where(x => x.StDate.CompareTo(BuildDates) <= 0).OrderByDescending(x => x.StDate).Take(finishdate).OrderBy(x => x.StDate);
	string ori_timeArea = "";
	string ori_timeArea_Jtype = "";
	int i = 0;
	foreach (var item in LatestNdays_ori) {
		// original的時間區間
		if (i == 0 || i == LatestNdays_ori.Count() - 1) {
			ori_timeArea += item.StDate.ToString("MM/dd") + ",";
			if (i == 0) {
				ori_timeArea_Jtype += item.StDate + ",";
			} else if (i == LatestNdays_ori.Count() - 1) {
				ori_timeArea_Jtype += item.StDate;
			}
		} else {
			ori_timeArea_Jtype += item.StDate + ",";
		}
		i++;
	}
	ori_timeArea = ori_timeArea.Split(",")[0] + "~" + ori_timeArea.Split(",")[1];

	// 製作目前(預測)時間區間 -------------
	var LatestNdays = ChartData.Where(x => x.StDate.CompareTo(finishdates) <= 0).OrderByDescending(x => x.StDate).Take(finishdate).OrderBy(x => x.StDate);
	string timeArea = "";
	string timeArea_Jtype = "";
	i = 0;
	foreach (var item in LatestNdays) {
		// LatestN的時間區間
		if (i == 0 || i == LatestNdays.Count() - 1) {
			timeArea += item.StDate.ToString("MM/dd") + ",";

			if (i == 0) {
				timeArea_Jtype += item.StDate + ",";
			} else if (i == LatestNdays_ori.Count() - 1) {
				timeArea_Jtype += item.StDate;
			}
		} else {
			timeArea_Jtype += item.StDate + ",";
		}
		i++;

	}
	timeArea = timeArea.Split(",")[0] + "~" + timeArea.Split(",")[1];



	// 取得數據最大最小值 -------------
	var MaxPrice = Math.Round((decimal)ChartData.Max(x => x.SteClose), 1);
	var MinPrice = Math.Round((decimal)ChartData.Min(x => x.SteClose), 1);
	// var MaxAcc = Math.Round(((decimal)PredictedData) / (decimal)ChartData.Min(x => x.SteClose) * 100, 1);
	// var MinAcc = Math.Round(((decimal)PredictedData) / (decimal)ChartData.Max(x => x.SteClose) * 100, 1);

	// var MaxAcc = 100;
	// var MinAcc = 0;

	// 製作AccComment & 結果  -------------
	string accComment = "";
	string rltComment = "";
	bool NeedShowAcc = (int)differenceOpp.TotalDays <= Math.Round(((decimal)finishdate) / 2, 0);
	int NeedShowDays = Math.Abs((int)differenceOpp.TotalDays - (int)Math.Round(((decimal)finishdate) / 2, 0));
	// var normalized_acc = Math.Round(((acc - MinAcc) / (MaxAcc - MinAcc)) * 100, 2);
	if (NeedShowAcc) {
		accComment = "預估準確率為「" + Model.PAccuracyRatio + " %」。";
		rltComment = ((Model.PreTrend == Model.PActTrend) ? "成功" : "失敗");
	} else {
		accComment = "待" + NeedShowDays + "日，模型穩定後，追蹤預估準確率。";
		rltComment = "待" + NeedShowDays + "日，模型穩定後，追蹤預估準確率。";
	}
	// 製作誤差計算  -------------

	// if LSTM 可能要全改寫
	bool IsNNModel = (ViewBag.result.usingModel == "LSTM" || ViewBag.result.usingModel == "FNN") ? true : false;
	Console.WriteLine($"IsNNModel = {IsNNModel},NeedShowAcc = {NeedShowAcc}, NeedShowDays = {NeedShowDays},(int)differenceOpp.TotalDay= {(int)differenceOpp.TotalDays}, Math.Round(((decimal)finishdate) / 2 = {Math.Round(((decimal)finishdate) / 2)}");
	if (IsNNModel) {
		// <finishdate 的最近close價格
		if (NeedShowAcc) {
			accComment = "預估準確率為「" + Model.PAccuracyRatio + " %」。";
			rltComment = Model.PResult;
		} else {
			accComment = "待" + NeedShowDays + "日，模型穩定後，追蹤預估準確率。";
			rltComment = "待" + NeedShowDays + "日，模型穩定後，追蹤預估準確率。";
		}
	}

	if (isTracing) {
		// 追蹤中
		finishdateCountDownStr += "預測「追蹤中」，整體走勢「" +
		Model.PreTrend + "」，參考價「" + Model.Plabel + "」元；" + accComment + "此預測將於「" +
		(int)differenceOpp.TotalDays + "」天後結案。";
	} else {
		finishdateCountDownStr += "預測「已結案" + (int)difference.TotalDays + "天」，預測趨勢「" + Model.PreTrend +
		"」，實際「走" + Model.PActTrend.Substring(1, 1) + "」，趨勢預測「" + Model.PResult + "；模型準確率為「" +
		Model.PAccuracyRatio + "%」";
	}

}
<!-- 引入 Chart.js 库 -->
<script src="https://cdn.jsdelivr.net/npm/chart.js"></script>
<script src="https://cdnjs.cloudflare.com/ajax/libs/moment.js/2.29.1/moment.min.js"></script>

<style>
	button[name='btn']{
		background-color: #73b5c5;
		border-color: #73b5c5;
	}

	div[name='th'] {
		align-content:center;
		background-color: #cedba0;
		font-weight:700;
		border-radius:10px;
		margin-top: 10px;
		margin-bottom: 10px;
		padding-top :10px;
		padding-bottom: 10px;
	}

	.photo-container{
		width:80%;
		display:flex;
		flex-direction:column;
	}

	.py-5{
		padding-top:0 !important;
	}

	@@media screen and (max-width: 1200px) {
		.photo-container {
			width: 100%;
		}

	}

	.photo-box{
		background-color:white !important;
		border-radius:15px;
		box-shadow: 0px 0px 3px rgba(0, 0, 0, 0.084), 0px 2px 3px rgba(0, 0, 0, 0.168);
	}

	.back-btn{
		max-width:200px;
		margin-left: auto;
		/* width:15%; */
	}

	.main-detail{
		width:100%;
	}
</style>

<div class="area-container">
	<div class="photo-container">
		<div>

			@* <h1 id="cmt" style="background-color:rgba(0, 98, 234, 0.1);padding:5px;">@finishdateCountDownStr </h1> *@
			<div class="p-5 mb-4 rounded-3 photo-box">
				<div class="container-fluid py-5 w-100" 　>
					<h1 id="cmt" class="display-5 fw-bold">Stock Propher</h1>
					<p class="col-md-10 fs-4 main-detail">@finishdateCountDownStr</p>
					<button name="btn" class="btn btn-primary btn-lg" style="margin-right:12px" type="button" data-bs-toggle="collapse" data-bs-target="#flush-c1" aria-expanded="true" aria-controls="flush-collapseOne">
						績效
					</button>
					<button name="btn" class="btn btn-primary btn-lg ma-5" style="margin-right:12px" type="button" data-bs-toggle="collapse" data-bs-target="#flush-c2" aria-expanded="true" aria-controls="flush-collapseOne">
						結果
					</button>
					<button name="btn" class="btn btn-primary btn-lg ma-5" style="margin-right:12px" type="button" data-bs-toggle="collapse" data-bs-target="#flush-c3" aria-expanded="true" aria-controls="flush-collapseOne">
						參數
					</button>
					<button name="btn" class="btn btn-primary btn-lg ma-5" style="margin-right:12px" type="button" data-bs-toggle="collapse" data-bs-target="#flush-c4" aria-expanded="true" aria-controls="flush-collapseOne">
						評估
					</button>
				</div>

				<div class="accordion accordion-flush" id="accordionFlushExample">
					<div class="accordion-item">
						<h2 class="accordion-header" id="flush-headingOne1">
							@* <button  class="accordion-button collapsed" type="button" data-bs-toggle="collapse" data-bs-target="#flush-c1" aria-expanded="false" aria-controls="flush-collapseOne">
							模型績效
							</button> *@
						</h2>
						<div id="flush-c1" class="accordion-collapse collapse" aria-labelledby="flush-headingOne" data-bs-parent="#accordionFlushExample">
							<div class="accordion-body ">
								<div class="container-fluid">
									<div class="row" name="th">
										<div class="col">
											預測前 時間
										</div>
										<div class="col">
											@(isTracing ? "目前 時間" : "結案 時間")
										</div>
										<div class="col">
											預測前 參考價<br>(A)
										</div>
										<div class="col">
											預測 參考價<br>(B)
										</div>
										<div class="col">
											目前 參考價<br>(C)
										</div>
										<div class="col">
											預測走勢<br>(D, A vs B)
										</div>
										<div class="col">
											實際走勢<br>(E, A vs C)
										</div>
										<div class="col">
											@(isTracing ? "預估結果" : "結案結果")<br>(F, D vs E)
										</div>
										<div class="col">
											@(isTracing ? "預估準確率" : "準確率")<br>(G, B vs C)
										</div>
										<div class="col">
											@(isTracing ? "預測誤差" : "實際誤差")<br>(H, B vs C)
										</div>
									</div>

									<div class="row">
										<div class="col">
											@(ori_timeArea)
										</div>
										<div class="col">
											@timeArea
										</div>
										<div class="col">
											@(Model.PreDictLabel)
										</div>
										<div class="col">
											@(Model.Plabel)
										</div>
										<div class="col">
											@(Model.PCurLabel)
										</div>
										<div class="col">
											@(Model.PreTrend)
										</div>
										<div class="col">
											@("走" + Model.PActTrend.Substring(1, 1))
										</div>
										<div class="col">
											@(isTracing ? "-" : Model.PAccuracyRatio + "%")
										</div>
										<div class="col">
											@(isTracing ? "-" : Model.PAccuracyRatio + "%")
										</div>
										<div class="col">
											@(Model.PSpreadRatio + "%")
										</div>
									</div>
								</div>
							</div>
						</div>
					</div>
					<div class="accordion-item">
						<h2 class="accordion-header" id="flush-headingOne2">
							@* <button class="accordion-button collapsed" type="button" data-bs-toggle="collapse" data-bs-target="#flush-c2" aria-expanded="false" aria-controls="flush-collapseOne">
							預測結果
							</button> *@
						</h2>
						<div id="flush-c2" class="accordion-collapse collapse" aria-labelledby="flush-headingTwo" data-bs-parent="#accordionFlushExample">
							<div class="accordion-body ">
								<div class="container-fluid">
									<div class="row" name="th">
										<div class="col">
											股票名稱
										</div>
										<div class="col">
											參考價格
										</div>
										<div class="col">
											建立時間
										</div>
										<div class="col">
											結案時間
										</div>
									</div>

									<div class="row">
										<div class="col" id="stockname">
										</div>
										<div class="col">
											@(Model.Plabel)
										</div>
										<div class="col">
											@PbulidTime
										</div>
										<div class="col">
											@PfinishTime
										</div>
									</div>
								</div>
							</div>
						</div>
						<div class="accordion-item">
							<h2 class="accordion-header" id="flush-headingOne3">
								@* <button class="accordion-button collapsed" type="button" data-bs-toggle="collapse" data-bs-target="#flush-c3" aria-expanded="false" aria-controls="flush-collapseOne">
								模型參數
								</button> *@
							</h2>
							<div id="flush-c3" class="accordion-collapse collapse" aria-labelledby="flush-headingThree" data-bs-parent="#accordionFlushExample">
								<div class="accordion-body ">
									<div class="container-fluid">
										<div class="row" id="HereParas_th" name="th">
											<div class="col">
												使用模型
											</div>
											<div class="col">
												投資偏好
											</div>
											<div class="col">
												使用變數
											</div>
										</div>
										<div class="row" id="HereParas_td">
											<div class="col">
												@ViewBag.result.usingModel
											</div>
											<div class="col">
												@((Model.Pprefer == 1) ? "短期投資" : "長期投資")
											</div>
											<div class="col" id="Pvariable">
											</div>
										</div>
									</div>
								</div>
							</div>
						</div>
						<div class="accordion-item">
							<h2 class="accordion-header" id="flush-headingOne4">
								@* <button class="accordion-button collapsed" type="button" data-bs-toggle="collapse" data-bs-target="#flush-c4" aria-expanded="false" aria-controls="flush-collapseOne">
								模型評估
								</button> *@
							</h2>
							<div id="flush-c4" class="accordion-collapse collapse" aria-labelledby="flush-headingFour" data-bs-parent="#accordionFlushExample">
								<div class="accordion-body">
									<div class="container-fluid">
										<div class="row" id="modelEva_th" name="th">
										</div>
										<div class="row" id="modelEva_tb">
										</div>
									</div>
								</div>
							</div>
						</div>
					</div>
				</div>

			</div>
		</div>
		@* style="max-width:1200px;max-height:700px;display:block" *@
		<div class="p-5 mb-4 rounded-3 photo-box" style="margin-top:30px">
			<canvas id="stockChart" style="width:70vw;height:50vw"></canvas>
		</div>
		<div class="d-inline-block text-end">
			<button class="btn-w-hover back-btn" id="IndividualStock">返回個股分頁</button>
			<button class="btn-w-hover back-btn" id="MypredictResult">返回我的預測</button>
		</div>

	</div>
	
</div>

<script>
	$("#IndividualStock").on("click", function () {
		window.location.href = "/Home/StockCharts/"+@Html.Raw(Json.Serialize(Model.Pstock))
	
	
	})
	$("#MypredictResult").on("click", function () {

		window.location.href = "/Member/MyPredictResult"

	})


	var actualData = @Html.Raw(Json.Serialize(ChartData));
	var predictedData = @Html.Raw(Json.Serialize(Model.Plabel));

	var formattedData = actualData.map(function (item) {
		var date = moment(item.StDate).format('YYYY-MM-DD');
		return {
			x: date,
			y: item.SteClose,
			label: '日期: ' + date + ', 收盤價: ' + item.SteClose
		};
	});
	console.log(formattedData)
	var formattedDataRemoveLast = formattedData.slice();

	formattedDataRemoveLast.pop();
	var formatDate_Ori = (@Html.Raw(Json.Serialize(ori_timeArea_Jtype)));
	// var dateObjects = formatDate_Ori.map(function (dateString) {
	// 	return new Date(dateString);
	// });
	// 去除字符串中的方括号并以逗号分割为数组
	var dateStrings = formatDate_Ori.split(",");
	var dateObjects_Ori = [];
	$.each(dateStrings, function (i, val) {
		var date = new Date(val);
		dateObjects_Ori.push(moment(date).format('YYYY-MM-DD'));
	})

	var formatDate_Lat = (@Html.Raw(Json.Serialize(timeArea_Jtype)));
	// 去除字符串中的方括号并以逗号分割为数组
	dateStrings = formatDate_Lat.split(",");
	var dateObjects_Lat = [];
	$.each(dateStrings, function (i, val) {
		var date = new Date(val);
		dateObjects_Lat.push(moment(date).format('YYYY-MM-DD'));
	})

	var lastActualDate = moment(formattedData[formattedData.length - 1].x);
	var predictedDate = moment(lastActualDate);
	var formattedPredictedDate = moment(new Date(@Html.Raw(Json.Serialize(PfinishTime)))).format('YYYY-MM-DD');
	var predictedClosePrice = predictedData;
	var predictedDate1 = predictedDate.format('YYYY-MM-DD');
	var isnn = @Html.Raw(Json.Serialize(IsNNModel));
	// console.log(typeof predictedDate1);
	// console.log(typeof formattedPredictedDate);
	var ctx = document.getElementById('stockChart').getContext('2d');


	var stockChart = new Chart(ctx, {
		type: 'line',
		data: {
			labels: [],
			datasets: [{
				label: '實際收盤價',
				data: formattedData,
				borderColor: 'blue',
				fill: false
			}, {
				label: '實際收盤價',
				data: [{
					x: formattedData[formattedData.length - 1].x,
					y: formattedData[formattedData.length - 1].y
				}],
				borderColor: 'blue',
				fill: false,
				pointRadius: 10
			}, {
				label: '預測參考價',
				data: [{
					x: formattedPredictedDate,
					y: predictedClosePrice
				}],
				borderColor: 'red',
				fill: false,
				pointRadius: 10
			}, {
				label: '趨勢線',
				data: [{
					x: formattedData[formattedData.length - 1].x,
					y: (isnn) ? formattedData[formattedData.length - 1].y : @Html.Raw(Json.Serialize(Model.PCurLabel))
				}, {
					x: formattedPredictedDate,
					y: predictedClosePrice
				}],
				borderColor: 'red',
				fill: false,
				pointRadius: 0,
				borderWidth: 0.5,
				borderDash: [5, 5]
			}, {
				label: '預測前' + @Html.Raw(Json.Serialize(finishdate))+'日移動平均',
				data: [{
					x: dateObjects_Ori[0],
					y: @Html.Raw(Json.Serialize(Model.PreDictLabel)) // 设置水平线的 y 坐标值
																		}, {
					x: dateObjects_Ori[dateObjects_Ori.length - 1],
					y: @Html.Raw(Json.Serialize(Model.PreDictLabel))
																		}],
				borderColor: 'black',
				fill: false,
				borderWidth: 3,
				borderDash: [5, 5],
				hidden: false // 結案的話秀
																		}, {
				label: '近' + @Html.Raw(Json.Serialize(finishdate))+'日移動平均*',
				data: [{
					x: dateObjects_Lat[0],
					y: @Html.Raw(Json.Serialize(Model.PCurLabel)) // 设置水平线的 y 坐标值
																		}, {
					x: dateObjects_Lat[dateObjects_Lat.length - 1],
					y: @Html.Raw(Json.Serialize(Model.PCurLabel))
																			}],
				borderColor: 'red',
				fill: false,
				borderWidth: 3,
				//borderDash: [5, 5],
				hidden: @Html.Raw(Json.Serialize(!NeedShowAcc)) // 设置水平线1隐藏
			}]
		},
		options: {
			responsive: true, // 禁用響應式
			maintainAspectRatio: false, // 禁用維持長寬比
			scales: {
				x: {
					ticks: {
						maxTicksLimit: 15 // 限制最大刻度數為 15
					}

				},
				y: {
					ticks: {
						beginAtZero: true
					}
				}
			}

		}
	});

	$("#mypredictresult").on("click", function () {
		window.location.href = "/Member/MyPredictResult"
	})
	$("#mystockid").on("click", function () {
		window.location.href = "/Home/StockCharts/" + @Model.Pstock
																														})
	$.ajax({
		url: "/StockModel/stocksnamewithcsv",
		method: "get",
		data: { data: @Model.Pstock },
		success: function (e) {
			$("#stockname").text(`${@Html.Raw(Json.Serialize(Model.Pstock))} - ${e[0]["label"]}`);

		}
	})
	function TransJtoO(DummyBlock) {

		var ToJ = JSON.parse(DummyBlock);
		// console.log(ToJ);
		var eva = new Object();
		var pars = new Object();
		// var keys = Object.keys(ToJ);
		// console.log(keys[0]);
		$.each(ToJ, function (i, val) {
			if (i == "MSE") {
				eva.均方誤差 = val;
			} else if (i == "RMSE") {
				eva.均方根誤差 = val;
			} else if (i == "Iters") {
				pars.迭代數 = val;
			} else if (i == "uEsti") {
				pars.誤差上界 = val;
			} else if (i == "lEsti") {
				pars.誤差下界 = val;
			} else if (i == "wSize") {
				pars.視窗尺寸 = val;
			} else if (i == "sLen") {
				pars.系列尺寸 = val;
			} else if (i == "tSize") {
				pars.資料筆數 = val;
			} else if (i == "cLev") {
				pars.信心水準 = val;
			} else if (i == "Layerchoose") {
				pars.神經層數 = val;
			}
			// console.log(i+" = "+val);
		})
		// console.log(eva);
		// console.log(pars);
		var EvaOrPar = new Object();
		EvaOrPar.eva = eva;
		EvaOrPar.pars = pars;
		// console.log(EvaOrPar);

		var isTracing = @Html.Raw(Json.Serialize(isTracing));
		var acc = @Html.Raw(Json.Serialize(Model.PAccuracyRatio));
		if (isTracing) {
			eva.預計準確率 = (acc) + "%";
		} else {
			eva.準確率 = (acc) + "%";
		}
		$("#HereParas").text(JSON.stringify(pars));

		// 把變數轉成中文顯示
		var varsMapTableJ = @Html.Raw(Json.Serialize(VarsTable));
		var PvariableJ = @Html.Raw(Json.Serialize(Model.Pvariable));
		var varsMapTable = JSON.parse(varsMapTableJ);
		var Pvariable = JSON.parse(PvariableJ);

		var TradVars = "";
		var k = 0;
		$.each(varsMapTable, function (i, ival) {
			for (var j = 0; j < Pvariable.length; j++) {
				if (i == Pvariable[j]) {
					if (k == 0) {
						TradVars = ival + ', ';
					}
					else if (k == Pvariable.length - 1) {
						TradVars += ival;

					} else {
						TradVars += ival + ', ';

					}
					k++;
				}

			}
		})
		// console.log(`${TradVars}`);
		$("#Pvariable").text(TradVars);


		$.each(eva, function (i, val) {
			if (i == "預計準確率" || i == "準確率") { } else {
				$("#modelEva_th").append("<div class='col'>" + i + "</div>");
				$("#modelEva_tb").append("<div class='col'>" + val.toFixed(2) + "</div>");
			}
		})
		$.each(pars, function (i, val) {
			$("#HereParas_th").append("<div class='col'>" + i + "</div>");
			$("#HereParas_td").append("<div class='col'>" + val + "</div>");
		})
		return EvaOrPar;
	}
	TransJtoO(@Html.Raw(Json.Serialize(Model.Dummyblock)));

</script>
