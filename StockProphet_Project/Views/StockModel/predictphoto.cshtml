@{
    ViewData["Title"] = "股票預測";
}

<!-- 引入 Chart.js 库 -->
<script src="https://cdn.jsdelivr.net/npm/chart.js"></script>
<script src="https://cdnjs.cloudflare.com/ajax/libs/moment.js/2.29.1/moment.min.js"></script>
<h1>股票預測</h1>
<h1>@ViewBag.DataCount</h1>
<h1>@ViewBag.PredictedData</h1>

<!-- 创建一个 canvas 元素用于绘制图表 -->
<canvas id="stockChart" width="800" height="400"></canvas>

<script>
    // 从 ViewBag 中获取后端传递的股票数据和预测数据
    var actualData = @Html.Raw(Json.Serialize(ViewBag.ChartData));
    var predictedData = @Html.Raw(Json.Serialize(ViewBag.PredictedData));

    // 解析实际数据的日期和收盘价
    var actualDates = actualData.map(function(item) {
        return item.stDate;
    });

    var actualClosePrices = actualData.map(function(item) {
        return item.steClose;
    });

    // 获取实际数据的最后一个日期
    var lastActualDate = moment(actualDates[actualDates.length - 1]);

    // 获取隔天的日期
    var predictedDate = moment(lastActualDate).add(1, 'day');

    // 格式化预测日期为 YYYY-MM-DD
    var formattedPredictedDate = predictedDate.format('YYYY-MM-DD');
    var predictedClosePrice = predictedData; // 设置预测的收盘价

    // 获取 canvas 元素的引用
    var ctx = document.getElementById('stockChart').getContext('2d');

    // 创建图表对象
    var stockChart = new Chart(ctx, {
        type: 'line',
        data: {
            labels: actualDates, // 实际数据的日期
            datasets: [{
                label: '實際收盤價',
                data: actualClosePrices, // 实际收盘价数据
                borderColor: 'blue', // 线条颜色
                fill: false // 不填充区域
            }, {
                label: '預測收盤價',
                data: [{
                    x: formattedPredictedDate,
                    y: predictedClosePrice
                }],
                borderColor: 'red', // 线条颜色
                fill: false, // 不填充区域
                pointRadius: 10 // 数据点的大小
            }, {
                label: '趨勢線',
                data: [{ // 添加一个数据点，将 actualClosePrices 的最后一个值与 predictedClosePrice 相连
                    x: actualDates[actualDates.length - 1], 
                    y: actualClosePrices[actualClosePrices.length - 1]
                }, {
                    x: formattedPredictedDate,
                    y: predictedClosePrice
                }],
                borderColor: 'red', // 线条颜色
                fill: false, // 不填充区域
                pointRadius: 0, // 不显示数据点
                borderWidth: 0.5, // 线条宽度
                borderDash: [5, 5] // 设置虚线样式
            }]
        },
        options: {
            scales: {
                xAxes: [{
                    type: 'time', // x 轴类型为时间
                    time: {
                        unit: 'day' // 时间单位为天
                    }
                }],
                yAxes: [{
                    ticks: {
                        beginAtZero: true // 将 Y 轴的起始点设置为 0
                    }
                }]
            }
        }
    });
</script>