<script src="https://d3js.org/d3.v4.js"></script>
<link rel="stylesheet" href="~/css/stockChartStyle.css" type="text/css" />

<div class="row">
    <div class="col-md-4">
        
        <button id="MemberExplore">探索</button><br>
        
    </div>

    <div class="col-md-8">

        <div id="beforeLog">
            <h1>請先登入會員</h1>
        </div>

        <div id="afterLog">

            <div id="Search">
                <i class="fa-duotone fa-magnifying-glass fa-beat-fade fa-xl" style="--fa-primary-color: #3d8bc7; --fa-secondary-color: #3d8bc7;"></i>
                <!-- 搜尋欄 -->
                <div id="searchForm">
                    <input type="text" id="searchTerm" name="searchTerm" placeholder="輸入股票代號" required>
                    <button type="submit">
                        <i class="fa-duotone fa-magnifying-glass fa-beat-fade fa-xl" style="--fa-primary-color: #4778cd; --fa-secondary-color: #2d60b9;"></i>
                    </button>
                </div>

                <div id="sortDropdown">
                    <label for="sortSelection">显示：</label>
                    <select id="sortOption">
                        <option value="stockname">股票名称</option>
                        <option value="Buildtime">建立时间</option>
                        <!-- 添加其他排序选项 -->
                    </select>
                </div>
                <div class="predictionArea">
                    <!-- 这里是生成的卡片 -->
                </div>

               


                <b>搜尋結果卡片</b>
                @* <!-- 卡片都會塞這裡 --> *@
                <div class="predictionArea"></div>
            </div>


        </div>
        <div id="MyFavorites">
            <h1>會員功能 - 我的收藏</h1>
            <b>我的最愛</b>
            <div class="MyFavorite"></div>

            @*  @if (sessionStorage.getItem("LogMemberLevel") == "high")
            {
            <p class="align-right">(@ViewBag.PidStringsCount/∞)已收藏筆數</p>
            }
            else if (sessionStorage.getItem("LogMemberLevel") == "normal")
            {
            <p class="align-right">(@ViewBag.PidStringsCount/5)已收藏筆數</p>
            }
            else
            {
            <p class="align-right">无法获取会员等级</p>


            } *@


        </div>

    </div>

</div>

<script src="https://kit.fontawesome.com/fe876fcce4.js" crossorigin="anonymous"></script>
<script src="https://code.jquery.com/jquery-3.7.1.js" crossorigin="anonymous"></script>
<script>
    //判斷會員是否登入
    var MID = sessionStorage.getItem("LogAccount");

    if (MID == '') {
        $('#beforeLog').show();
        $('#afterLog').hide();
    } else {
        $('#beforeLog').hide();
        $('#afterLog').show();
        $('#Search').hide();
    }
    console.log("顯示MID:" + MID);
    $(function () {
        // 1.點擊回到會員頁
        $('#showMemberIndex').on("click", function () {
            window.location.href = "/Member/Index";
        });

        // 2.點擊修改個人資料
        $('#showRevise').on("click", function () {
            window.location.href = "/Member/Edit";
        });
        //3.點擊我的收藏
        $('#showFavoritesPage').on("click", function () {
            $('#MyFavorites').show();
            $('#Search').hide();
        });
        // 4.點擊我的收藏
        $('#MemberExplore').on("click", function () {
            $('#Search').show();
            $('#MyFavorites').hide();
        });

        // 5.點擊我要預測
        $('#showPredictFunc').on("click", function () {
            window.location.href = "/StockModel/Predictindex";
        });

        // 6.點擊我的預測結果
        $('#showHistoryPage').on("click", function () {
            window.location.href = "/Member/MyPredictResult";
        });

        // 6.點擊登入會員
        $('#MemberLogin').on("click", function () {
            window.location.href = "/Member/Login";
        });

        
        // 個人收藏頁面
        var parseDate = d3.timeParse("%Y-%m-%d");
        var sessionMID = sessionStorage.getItem("LogMemberId");
        var data = { sessionMID: sessionMID };
        //console.log(data)

        var jsonforplot = [];
        var Pbuildate;
        var plotarray = [];
        var otherprarmeter = [];
        var parameter;
        var subArray = [];

        $.ajax({
            url: "/Member/MyCollect2",
            method: "get",
            data: data,
            success: function (e) {
                console.log(e);
                e.forEach(function (element) {
                    var number = element;
                    //console.log(number);
                    $.ajax({
                        method: "get",
                        url: "/Member/Test",
                        data: { sessionPID: number },
                        success: function (e) {
                            // console.log(e);
                            jsonforplot = [];
                            $.each(e, function (index, element) {
                                var historydate1 = new Date(element["STdate"]);
                                jsonforplot.push({ Date: historydate1, Close: element["SteClose"] });
                            });
                            var historydate2 = new Date(e[0]["PFinsihTime"]);
                            jsonforplot.push({ Date: historydate2, Close: e[0]["PLabel"] });
                            // console.log(jsonforplot);
                            // console.log(jsonforplot)
                            // console.log(e[0]["PStock"])
                            var builddate3 = new Date(e[0]["PBuildTime"]);
                            var builddate4 = builddate3.getFullYear() + '-' + (builddate3.getMonth() + 1) + '-' + builddate3.getDate();
                            var FinsihTime = new Date(e[0]["PFinsihTime"]);
                            var FinsihTime2 = FinsihTime.getFullYear() + '-' + (FinsihTime.getMonth() + 1) + '-' + FinsihTime.getDate();
                            
                           
                                jsonforplot.sort(function (a, b) {
                                    // 获取当前子数组中每个对象的日期属性，并转换为日期对象
                                    var dateA = new Date(a.Date);
                                    var dateB = new Date(b.Date);

                                    return dateA - dateB; // 降序排列
                                });
                            
                            
                            otherprarmeter = [];
                            otherprarmeter.push({
                                Buildtime: builddate4,
                                stockname: e[0]["PStock"],
                                parameter: e[0]["Parameter"],
                                PID: e[0]["PID"],
                                preVariable: e[0]["preVariable"],
                                PAcount: e[0]["PAcount"],
                                SName: e[0]["SName"],
                                SCode: e[0]["SCode"],
                                PFinsihTime: FinsihTime2
                            });
                            // console.log("4444444");
                            // console.log(jsonforplot)
                            var currentdate = new Date()
                            var result;
                            if (otherprarmeter[0]["PFinsihTime"] > currentdate) { 
                                result = "未結案";
                            
                            } else {
                                result = "結案";
                            }

                            // console.log(otherprarmeter);
                            var parameter = otherprarmeter[0]["parameter"];
                            var preVariable = otherprarmeter[0]["preVariable"];
                            // // console.log(otherprarmeter[index]["Buildtime"]);
                            // console.log(parameter)
                            // console.log(preVariable)
                            drawPre(jsonforplot, number, result, otherprarmeter[0]["Buildtime"], otherprarmeter[0]["PID"], preVariable, parameter, otherprarmeter[0]["PAcount"], otherprarmeter[0]["SName"], otherprarmeter[0]["SCode"], otherprarmeter[0]["PFinsihTime"], '.MyFavorite');



                        }
                    });
                });
            },
            error: function (xhr, status, error) {
                // 处理错误
            }
        });


        
        // 股票卡片搜尋欄
        $('#searchForm button').click(function (e) {
            e.preventDefault();
            var searchTerm = $('#searchTerm').val();
            var jsonforplot;
            var Pbuildate;
            var plotarray = [];
            var otherprarmeter = [];
            console.log(searchTerm);

            $.ajax({
                type: 'get',
                url: '/Member/Search',
                data: { searchTerm: searchTerm },
                success: function (e) {
                    console.log("這裡");

                    console.log(e);

                    for (var i = 0; i < e.length; i += 5) {
                        //console.log("----------" + i)
                        var subArray = [];
                        for (var j = 0; j < 5; j++) {
                            var historydate1 = new Date(e[j]["STdate"])
                            jsonforplot = ({ Date: historydate1, Close: e[j]["SteClose"] })
                            subArray.push(jsonforplot);
                        }

                        console.log(jsonforplot)
                        var finishdate2 = new Date(e[i]["PFinsihTime"])
                        subArray.push({ Date: finishdate2, Close: e[i]["PLabel"] })
                        plotarray.push(subArray)

                    }

                    for (var i = 0; i < plotarray.length; i++) {
                        plotarray[i].sort(function (a, b) {
                            // 获取当前子数组中每个对象的日期属性，并转换为日期对象
                            var dateA = new Date(a.Date);
                            var dateB = new Date(b.Date);

                            return dateA - dateB; // 降序排列
                        });
                    }
                    // console.log(plotarray)
                    for (var w = 0; w < e.length; w += 5) {
                        var builddate3 = new Date(e[w]["PBuildTime"])
                        var builddate4 = builddate3.getFullYear() + '-' + (builddate3.getMonth() + 1) + '-' + builddate3.getDate()

                        var FinsihTime = new Date(e[w]["PFinsihTime"])
                        var FinsihTime2 = FinsihTime.getFullYear() + '-' + (FinsihTime.getMonth() + 1) + '-' + FinsihTime.getDate()
                        otherprarmeter.push({
                            Buildtime: builddate4,
                            stockname: e[w]["PStock"],
                            parameter: e[w]["Parameter"],
                            PID: e[w]["PID"],
                            preVariable: e[w]["preVariable"],
                            PAcount: e[w]["PAcount"],
                            SName: e[w]["SName"],
                            SCode: e[w]["SCode"],
                            PFinsihTime: FinsihTime2
                        })
                    }

                    $.each(plotarray, function (index, element) {
                        var finishtime = new Date(element[5]["Date"]);
                        var currentdate = new Date()
                        var result;

                        // console.log(finishtime)
                        // console.log(currentdate)
                        if (finishtime > currentdate) {
                            result = "未結案"
                        } else {
                            result = "結案"
                        }
                        
                        //結案狀態

                        //結果參數
                        var parameter = JSON.parse(otherprarmeter[index]["parameter"]);
                        //選擇變數
                        var preVariable = JSON.parse(otherprarmeter[index]["preVariable"]);
                        //console.log((otherprarmeter[index]["Buildtime"]))
                        drawPre(element, index + 1, result, otherprarmeter[index]["Buildtime"], otherprarmeter[index]["PID"], preVariable, parameter, otherprarmeter[index]["PAcount"], otherprarmeter[index]["SName"], otherprarmeter[index]["SCode"], otherprarmeter[index]["PFinsihTime"], '.predictionArea')
                    });
                }
            })
        })


        




        // 開始
        // 生卡片
        function drawPre(myData, index, preState, preDate, PID, preVariable, parameter, PAcount, SName, SCode, PFinsihTime, targetSelector) {
            console.log(myData);
            var prelist = "";

            if (preVariable[0] != null) {

                prelist += `<button class="copyAll" id="card${PID}" onclick="copyAllList(this)">複製全部</button>`;
                for (var i = 0; i < preVariable.length; i++) {
                    prelist += `<button class="pre-list-btn" onclick = "copyList(this)" > ${preVariable[i]} </button>`;

                };

            };
            //var pa
            $(targetSelector).prepend(`<label class='prediction-card ${index}'>
                                               <input type='checkbox' class='card-btn' />
                                               <div class='card-content'><div class='card-front'>
                                                 <p class="pre-code" style="display:inline;">${SCode}</p>
                                                  <p class="pre-name" style="display:inline;margin-left:10px;">${SName}</p>
                                                <p class="pre-state" style="display:inline;margin-left:10px;">${preState}</p>
                                               <table>
                                               <tr><th class="pre-th">建立帳號</th><td class="pre-td pre-date">${PAcount}</td></tr>
                                               <tr><th class="pre-th">建立日期</th><td class="pre-td pre-date">${preDate}</td></tr>
                                               <tr><th class="pre-th">預測日期</th><td class="pre-td pre-date">${PFinsihTime}</td></tr>
                                               <tr><th class="pre-th">預測價格</th><td class ="pre-td">${myData[5]["Close"]}</td></tr>
                                               <tr><th class="pre-th">結果參數</th><td class="pre-td">MSE:${parameter.MSE}</td></tr>
                                               </table>

                                               </div>
                                               <div class='card-back'>
                                               <div class='forPrediction'>
                                               </div></div></div>
                                               <div class="preVar">${prelist}</div></label>`);
            //重新整理日期
            var dateList = [];
            for (var i = 0; i < myData.length; i++) {
                dateList.push(myData[i].Date);
            }

            //圖表大小的設置
            var preMargin = { top: 20, right: 50, bottom: 30, left: 50 },
                preWidth = 325 - preMargin.left - preMargin.right,
                preHeight = 200 - preMargin.top - preMargin.bottom;

            //X、Y軸scale
            var preScaleX = d3.scaleBand().range([10, preWidth]).domain(dateList);
            var preScaleY = d3
                .scaleLinear()
                .range([preHeight - 10, 0])
                .domain(d3.extent(myData, (d) => d.Close));

            //X、Y軸
            var preAxisX = d3.axisBottom(preScaleX);
            var preAxisY = d3.axisLeft(preScaleY);

            //生成線
            var linePre = d3
                .line()
                .x((d) => preScaleX(d.Date))
                .y((d) => preScaleY(d.Close));
            /*.curve(d3.curveBasis);*/ //讓折線有弧度

            //生SVG
            var preSvg = d3
                .select(".forPrediction")
                .append("svg")
                .attr("class", "forPre")
                .attr("width", preWidth + preMargin.left + preMargin.right)
                .attr("height", preHeight + preMargin.top + preMargin.bottom)
                .append("g")
                .attr(
                    "transform",
                    "translate(" + preMargin.left + "," + preMargin.top + ")"
                );

            //顏色
            var maxDPre = d3.max(myData, function (d) {
                return +d.Date;
            });
            var maxCPre = d3.max(myData, function (d) {
                return +d.Close;
            });
            var minCPre = d3.min(myData, function (d) {
                return +d.Close;
            });

            var colorX = d3.scaleLinear().domain([0, maxDPre]).range([preWidth, 0]);

            preSvg
                .append("linearGradient")
                .attr("id", "line-gradient")
                .attr("gradientUnits", "userSpaceOnUse")
                .attr("x1", colorX(0))
                .attr("y1", 0)
                .attr("x2", colorX(maxDPre))
                .attr("y2", 0)
                .selectAll("stop")
                .data([
                    { offset: "0%", color: "#51a1b7" },
                    { offset: "100%", color: "#cedba0" },
                ])
                .enter()
                .append("stop")
                .attr("offset", function (d) {
                    return d.offset;
                })
                .attr("stop-color", function (d) {
                    return d.color;
                });

            preSvg
                .append("g")
                .datum(myData)
                .attr("class", "predictionLine here")
                .attr("transform", "translate(18,0)"); //折線
            preSvg
                .append("g")
                .attr("class", "x axis pre")
                .attr("transform", "translate(0," + preHeight + ")"); //X軸
            preSvg.append("g").attr("class", "y axis pre"); //Y軸

            preSvg
                .select("g.predictionLine.here")
                .append("path")
                .attr("class", "pathPre")
                .attr("d", linePre(myData))
                .attr("fill", "none")
                .attr("stroke", "url(#line-gradient)")
                .attr("stroke-width", 2);
            preSvg
                .select("g.x.axis.pre")
                .call(
                    preAxisX
                        .tickValues(dateList)
                        .tickFormat(d3.timeFormat("%m/%d"))
                        .tickPadding(10)
                        .tickSizeInner(-preHeight - 10, -preHeight)
                )
                .selectAll("text")
                .style("text-anchor", "end")
                .attr("dx", "-.8em")
                .attr("dy", ".15em")
                .attr("transform", "rotate(-25) translate(20, 10)");

            preSvg.select("g.y.axis.pre").call(
                preAxisY
                    .tickSizeInner(-preWidth - 10, -preWidth)
                    .tickPadding(10)
                    .tickFormat(d3.format(".1f"))
                    .tickValues([minCPre, d3.mean([minCPre, maxCPre]), maxCPre])
            );

            //--點點--//
            //提示框
            var Tooltip = d3
                .select(".forPrediction")
                .append("div")
                .style("opacity", 0)
                .attr("class", "tooltip")
                .style("background-color", "white")
                .style("border", "solid")
                .style("border-width", "2px")
                .style("border-radius", "5px")
                .style("padding", "5px")
                .style("width", "100px")
                .style("height", "33px")
                .style("text-align", "center");

            var mouseover = function (d) {
                Tooltip.style("opacity", 1);
            };
            var mousemove = function (d) {
                Tooltip.html("價格: " + d.Close)
                    .style("left", d3.mouse(this)[0] + 20 + "px")
                    .style("top", d3.mouse(this)[1] + "px");
            };
            //console.log($(".circleGroup"));
            var mouseleave = function (d) {
                Tooltip.style("opacity", 0);
            };
            //加圓點
            preSvg
                .append("g")
                .attr("class", `circleGroup${index}`)
                .attr("transform", "translate(18,0)")
                .selectAll("dot")
                .data(myData)
                .enter()
                .append("circle")
                .attr("class", "myCircle")
                .attr("cx", (d) => preScaleX(d.Date))
                .attr("cy", (d) => preScaleY(d.Close))
                .attr("r", 5)
                .attr("stroke", "#69b3a2")
                .attr("fill", "#FFF")
                .on("mouseover", mouseover)
                .on("mousemove", mousemove)
                .on("mouseleave", mouseleave);

            //動畫?
            pointAni(index);
            function pointAni(index) {
                var strokeC = myData[5].Close > myData[4].Close ? "#b84121" : "#69b3a2";
                var fillC = myData[5].Close > myData[4].Close ? "#f77465" : "#cedba0";
                /*        console.log("strokeC:" + strokeC + "  fillC:" + fillC);*/

                d3.select(`.circleGroup${index} :last-child`)
                    .attr("stroke", strokeC)
                    .style("stroke-width", 3)
                    .style("stroke-opacity", 1)
                    .style("r", 5);

                d3.select(`.circleGroup${index} :last-child`)
                    .attr("fill", fillC)
                    .transition()
                    .duration(1000)
                    .style("stroke-width", 10)
                    .style("stroke-opacity", 0)
                    .style("r", 7)
                    .on("end", function () {
                        pointAni(index);
                    });
            }
        }

        function copyList(obj) {

            $(obj).addClass("pre-list-btn-click");

            setTimeout(function () {

                $(obj).removeClass("pre-list-btn-click")

                $(obj).addClass("pre-list-btn-click-again");

            }, 1000);



            //console.log($(obj).text());



            var content = $(obj).text();

            navigator.clipboard.writeText(content);

        }



        function copyAllList(obj) {

            $(obj).addClass("copyAllCopied");

            setTimeout(function () {

                $(obj).removeClass("copyAllCopied");

            }, 1000)

            var thisCard = $(obj).attr("id");

            var thisCardList = $(`#${thisCard} ~ .pre-list-btn`);









            var content = "";

            for (var i = 0; i < thisCardList.length; i++) {

                if (i != 0) content += ",";

                content += thisCardList[i].innerText;

            }

            navigator.clipboard.writeText(content);



        }


        setTimeout(function () {

            $(".pre-list-btn").on({

                mouseenter: function () {

                    $(this).removeClass("pre-list-btn-he");

                    $(this).removeClass("pre-list-btn-hl");

                    $(this).addClass("pre-list-btn-he");

                },

                mouseleave: function () {

                    $(this).addClass("pre-list-btn-hl");

                }

            })

        }, 500);




    })

    var dataToServer = { user: sessionStorage.getItem("LogAccount"), cardID: $(btn).attr("id").substring(3) };
    $.ajax({
        url: "/Home/CheckCard",
        method: "POST",
        data: dataToServer,
        success: function (e) {
            console.log(e);
            switch (e.substring(0, 1)) {
                case "A": {
                    $(btn).css("color", "red");
                    console.log("新增一筆");
                    sessionStorage.setItem("LogMemberfavoriteModel", e.substring(1));
                    break
                }
                case "D": {
                    $(btn).css("color", "black");
                    console.log("刪除一筆");
                    sessionStorage.setItem("LogMemberfavoriteModel", e.substring(1));
                    break;
                }
                case "R":
                    console.log("收藏上限了朋友");
                    break;
            }
        }
    })

    // 檢視愛心狀態
    setTimeout(function () {    //要抓剛appen上去的元素，所以設timeout
        
            d3.json(`/Home/cardCheck/${user}`, function (list) {
                list.forEach(function (item, i) {
                    //針對會員有按愛心的按鈕 變化
                    $(`#PID${parseInt(item)}`).css({
                        color: "red",
                        /* fontSize: "32px" */
                    });
                })
            });
    }, 500);
</script>








