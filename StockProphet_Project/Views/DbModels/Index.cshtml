@model IEnumerable<StockProphet_Project.Models.DbModel>
@using System.Text.Json;
@{
	ViewData["Title"] = "管理者頁面-Model資訊";
}
<style>
	.model-container{
		width:80%;
	}

	@@media screen and (max-width: 1200px)
		.model-container {
			width: 100%;
		}
	}

	.myTable thead tr::after {
		content: "";
		background-color: #f5f5f5;
		height: 52px;
	}
</style>
<script src="https://cdn.jsdelivr.net/npm/chart.js"></script>
<div class="area-container">
	<div class="model-container">
		<h1>管理者頁面(Model)</h1>
		<br>
		<div class="btn-area">
		<button class="btn-w-hover mg-btn" onclick="loadModel('DbMembers')">Member</button>
		<button class="btn-w-hover mg-btn" onclick="loadModel('DbModels')">Models</button>
		<button class="btn-w-hover mg-btn" onclick="loadModel('Stocks')">Stocks</button>
		</div>
		<br>
		<br>
		<div class="d-xl-flex justify-content-around">
			<canvas id="barChart" width="400" height="400"></canvas>
			<canvas id="accountprefer" width="400" height="400"></canvas>

		</div>
		<p>
			<a asp-action="Create">Create New</a>
		</p>
		<div class="mb-5">
			<label>Stock搜尋欄</label>
			<input type="type" name="name" id="stockselect" value="" />
		</div>
		<div class="myTable"></div>
		<table class="table">
			<thead>
				<tr>
					<th>
						@Html.DisplayNameFor(model => model.Pstock)
					</th>
					<th>
						@Html.DisplayNameFor(model => model.Pvariable)
					</th>
					<th>
						@Html.DisplayNameFor(model => model.Plabel)
					</th>
					<th>
						@Html.DisplayNameFor(model => model.Pprefer)
					</th>
					<th>
						@Html.DisplayNameFor(model => model.Paccount)
					</th>
					<th>
						@Html.DisplayNameFor(model => model.PbulidTime)
					</th>
					<th>
						@Html.DisplayNameFor(model => model.PfinishTime)
					</th>
					<th>
						@Html.DisplayNameFor(model => model.Pstatus)
					</th>
					<th>
						@Html.DisplayNameFor(model => model.Dummyblock)
					</th>
					<th></th>
				</tr>
			</thead>
			<tbody id="tableBody" class="table-row-hover">
				@foreach (var item in Model) {
					<tr>
						<td>
							@Html.DisplayFor(modelItem => item.Pstock)
						</td>
						<td>

							@{
								var a = item.Pvariable;
								string b = "";
								a = a.Replace("[", "");
								a = a.Replace("]", "");
								a = "," + a;
								for (int i = 1; i < a.Split(",").Count(); i++) {
									if (i % 4 == 0) {
										b += a.Split(",")[i] + "\r\n";

									} else {

										b += a.Split(",")[i] + ", ";
									}

								}


							}
							@b


						</td>
						<td>
							@Html.DisplayFor(modelItem => item.Plabel)
						</td>
						<td>
							@Html.DisplayFor(modelItem => item.Pprefer)
						</td>
						<td>
							@Html.DisplayFor(modelItem => item.Paccount)
						</td>
						<td>
							@Html.DisplayFor(modelItem => item.PbulidTime)
						</td>
						<td>
							@Html.DisplayFor(modelItem => item.PfinishTime)
						</td>
						<td>
							@Html.DisplayFor(modelItem => item.Pstatus)
						</td>
						<td>
							@{
								var c = item.Dummyblock;
								string d = "";
								c = c.Replace("{", "");
								c = c.Replace("}", "");
								c = "," + c;
								for (int i = 1; i < c.Split(",").Count(); i++) {
									if (i % 4 == 0) {
										d += c.Split(",")[i] + "\r\n";

									} else {

										d += c.Split(",")[i] + ", ";
									}

								}


							}
							@d
						</td>
						<td>
							<a class="a-style" asp-action="Edit" asp-route-id="@item.Pid">Edit</a>
							<a class="a-style" asp-action="Details" asp-route-id="@item.Pid">Details</a>
							<a class="a-style" asp-action="Delete" asp-route-id="@item.Pid">Delete</a>
						</td>
					</tr>
				}
			</tbody>
		</table>
	</div>
</div>

<script>

	function loadModel(model) {
		// console.log(model)
		window.location.href = `/${model}/Index`
	}

	$("#stockselect").on("change", function () {
		if ($("#stockselect").val() == "") {
			location.reload(); // 重新加载页面
		} else {
			$.ajax({
				url: "/DbModels/orderdata",
				method: "get",
				data: { data: $("#stockselect").val() },
				success: function (e) {
					console.log(e);
					// 清空表格
					$("#tableBody").empty();
					// 遍历响应数据，将每个项目添加到表格中
					$.each(e, function (index, item) {
						var row = "<tr>" +
							"<td>" + item.Pstock + "</td>" +
							"<td>" + item.Pvariable + "</td>" +
							"<td>" + item.Plabel + "</td>" +
							"<td>" + item.Pprefer + "</td>" +
							"<td>" + item.Paccount + "</td>" +
							"<td>" + item.PbulidTime + "</td>" +
							"<td>" + item.PfinishTime + "</td>" +
							"<td>" + item.Pstatus + "</td>" +
							"<td>" + item.Dummyblock + "</td>" +
							"<td>" +
							"<a asp-action='Edit' asp-route-id='" + item.Pid + "'>Edit</a> |" +
							"<a asp-action='Details' asp-route-id='" + item.Pid + "'>Details</a> |" +
							"<a asp-action='Delete' asp-route-id='" + item.Pid + "'>Delete</a>" +
							"</td>" +
							"</tr>";
						$("#tableBody").append(row);
					});
				}
			});
		}
	});
	var stocknumber = [];
	var accountprefer = [];
	$.ajax({

		url: "/DbModels/barchart",
		method: "get",
		success: function (e) {
			
			$.each(e, function (index,element) { 
				
				stocknumber.push({ stockname: element["Pstock"] })
				accountprefer.push({ accountname: element["Paccount"], accountprefer: element["Pprefer"] })
			
			})
			drawBarChart(stocknumber);
			drawcustomerChart(accountprefer);
			

		}

	})
	function drawBarChart(data) {
		var ctx = document.getElementById('barChart').getContext('2d');
		var labels = [];
		var counts = {};

		// 遍历数据，计算每个股票的出现次数
		data.forEach(function (item) {
			var stockname = item.stockname;
			counts[stockname] = counts[stockname] ? counts[stockname] + 1 : 1;
		});

		// 将股票名称添加到标签中
		labels = Object.keys(counts);

		// 将每个股票的出现次数添加到数据中
		var data = labels.map(function (label) {
			return counts[label];
		});

		// 使用Chart.js绘制柱状图
		var myChart = new Chart(ctx, {
			type: 'bar',
			data: {
				labels: labels,
				datasets: [{
					label: 'Stock Counts',
					data: data,
					backgroundColor: 'rgba(54, 162, 235, 0.2)',
					borderColor: 'rgba(54, 162, 235, 1)',
					borderWidth: 1
				}]
			},
			options: {
				scales: {
					yAxes: [{
						ticks: {
							beginAtZero: true
						}
					}]
				},
				responsive: false // 禁用响应式
			}
		});
	}
	function drawcustomerChart(accountprefer) {
		// Convert preference numbers to labels
		accountprefer.forEach(function (item) {
			item.accountprefer = item.accountprefer === 1 ? 'Short-term' : 'Long-term';
		});

		var counts = {};
		var labels = [];
		var datasets = {};

		// Count the occurrences of each accountprefer for each accountname
		accountprefer.forEach(function (item) {
			var accountName = item.accountname;
			var preference = item.accountprefer;

			if (!counts[accountName]) {
				counts[accountName] = { 'Short-term': 0, 'Long-term': 0 };
			}

			counts[accountName][preference]++;
		});

		// Extract unique accountnames and preferences
		labels = Object.keys(counts);
		var preferences = ['Short-term', 'Long-term'];

		// Initialize datasets
		preferences.forEach(function (preference) {
			datasets[preference] = {
				label: preference,
				data: [],
				backgroundColor: preference === 'Short-term' ? 'rgba(255, 99, 132, 0.5)' : 'rgba(54, 162, 235, 0.5)',
				borderColor: preference === 'Short-term' ? 'rgba(255, 99, 132, 1)' : 'rgba(54, 162, 235, 1)',
				borderWidth: 1
			};
		});

		// Populate data for each dataset
		labels.forEach(function (label) {
			preferences.forEach(function (preference) {
				datasets[preference].data.push(counts[label][preference] || 0);
			});
		});

		// Create chart
		var ctx = document.getElementById('accountprefer').getContext('2d');
		var myChart = new Chart(ctx, {
			type: 'bar',
			data: {
				labels: labels,
				datasets: Object.values(datasets)
			},
			options: {
				responsive: false, // Disable responsiveness
				scales: {
					x: {
						stacked: true,
						title: {
							display: true,
							text: 'Account Name'
						}
					},
					y: {
						stacked: true,
						title: {
							display: true,
							text: 'Number of Preferences'
						}
					}
				}
			}
		});
	}


	$(".btn-area .mg-btn:nth-child(2)").css({
		"color": "white",
		"background-color": "#87aeb4"
	})
	
</script>
